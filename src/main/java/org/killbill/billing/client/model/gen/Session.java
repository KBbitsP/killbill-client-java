/*
 * Copyright 2010-2014 Ning, Inc.
 * Copyright 2014-2020 Groupon, Inc
 * Copyright 2020-2020 Equinix, Inc
 * Copyright 2014-2020 The Billing Project, LLC
 *
 * The Billing Project licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import org.joda.time.DateTime;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class Session {

    private String id = null;

    private DateTime startDate = null;

    private DateTime lastAccessDate = null;

    private Long timeout = null;

    private String host = null;


    public Session() {
    }

    public Session(final String id,
                     final DateTime startDate,
                     final DateTime lastAccessDate,
                     final Long timeout,
                     final String host) {
        this.id = id;
        this.startDate = startDate;
        this.lastAccessDate = lastAccessDate;
        this.timeout = timeout;
        this.host = host;

    }


    public Session setId(final String id) {
        this.id = id;
        return this;
    }

    public String getId() {
        return id;
    }

    public Session setStartDate(final DateTime startDate) {
        this.startDate = startDate;
        return this;
    }

    public DateTime getStartDate() {
        return startDate;
    }

    public Session setLastAccessDate(final DateTime lastAccessDate) {
        this.lastAccessDate = lastAccessDate;
        return this;
    }

    public DateTime getLastAccessDate() {
        return lastAccessDate;
    }

    public Session setTimeout(final Long timeout) {
        this.timeout = timeout;
        return this;
    }

    public Long getTimeout() {
        return timeout;
    }

    public Session setHost(final String host) {
        this.host = host;
        return this;
    }

    public String getHost() {
        return host;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Session session = (Session) o;
        return Objects.equals(this.id, session.id) &&
        Objects.equals(this.startDate, session.startDate) &&
        Objects.equals(this.lastAccessDate, session.lastAccessDate) &&
        Objects.equals(this.timeout, session.timeout) &&
        Objects.equals(this.host, session.host);

    }

    @Override
    public int hashCode() {
        return Objects.hash(id,
                            startDate,
                            lastAccessDate,
                            timeout,
                            host);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Session {\n");
        
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
        sb.append("    lastAccessDate: ").append(toIndentedString(lastAccessDate)).append("\n");
        sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
        sb.append("    host: ").append(toIndentedString(host)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

