/*
 * Copyright 2014-2018 Groupon, Inc
 * Copyright 2014-2018 The Billing Project, LLC
 *
 * The Billing Project licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import org.killbill.billing.client.model.gen.OverdueCondition;
import org.killbill.billing.overdue.api.OverdueCancellationPolicy;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class OverdueStateConfig {

    private String name = null;

    private Boolean isClearState = null;

    private OverdueCondition condition = null;

    private String externalMessage = null;

    private Boolean isBlockChanges = null;

    private Boolean isDisableEntitlement = null;

    private OverdueCancellationPolicy subscriptionCancellationPolicy = null;

    private Integer autoReevaluationIntervalDays = null;


    public OverdueStateConfig() {
    }

    public OverdueStateConfig(final String name,
                     final Boolean isClearState,
                     final OverdueCondition condition,
                     final String externalMessage,
                     final Boolean isBlockChanges,
                     final Boolean isDisableEntitlement,
                     final OverdueCancellationPolicy subscriptionCancellationPolicy,
                     final Integer autoReevaluationIntervalDays) {
        this.name = name;
        this.isClearState = isClearState;
        this.condition = condition;
        this.externalMessage = externalMessage;
        this.isBlockChanges = isBlockChanges;
        this.isDisableEntitlement = isDisableEntitlement;
        this.subscriptionCancellationPolicy = subscriptionCancellationPolicy;
        this.autoReevaluationIntervalDays = autoReevaluationIntervalDays;

    }


    public OverdueStateConfig setName(final String name) {
        this.name = name;
        return this;
    }

    public String getName() {
        return name;
    }

    public OverdueStateConfig setIsClearState(final Boolean isClearState) {
        this.isClearState = isClearState;
        return this;
    }

    @JsonProperty(value="isClearState")
    public Boolean isClearState() {
        return isClearState;
    }

    public OverdueStateConfig setCondition(final OverdueCondition condition) {
        this.condition = condition;
        return this;
    }

    public OverdueCondition getCondition() {
        return condition;
    }

    public OverdueStateConfig setExternalMessage(final String externalMessage) {
        this.externalMessage = externalMessage;
        return this;
    }

    public String getExternalMessage() {
        return externalMessage;
    }

    public OverdueStateConfig setIsBlockChanges(final Boolean isBlockChanges) {
        this.isBlockChanges = isBlockChanges;
        return this;
    }

    @JsonProperty(value="isBlockChanges")
    public Boolean isBlockChanges() {
        return isBlockChanges;
    }

    public OverdueStateConfig setIsDisableEntitlement(final Boolean isDisableEntitlement) {
        this.isDisableEntitlement = isDisableEntitlement;
        return this;
    }

    @JsonProperty(value="isDisableEntitlement")
    public Boolean isDisableEntitlement() {
        return isDisableEntitlement;
    }

    public OverdueStateConfig setSubscriptionCancellationPolicy(final OverdueCancellationPolicy subscriptionCancellationPolicy) {
        this.subscriptionCancellationPolicy = subscriptionCancellationPolicy;
        return this;
    }

    public OverdueCancellationPolicy getSubscriptionCancellationPolicy() {
        return subscriptionCancellationPolicy;
    }

    public OverdueStateConfig setAutoReevaluationIntervalDays(final Integer autoReevaluationIntervalDays) {
        this.autoReevaluationIntervalDays = autoReevaluationIntervalDays;
        return this;
    }

    public Integer getAutoReevaluationIntervalDays() {
        return autoReevaluationIntervalDays;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OverdueStateConfig overdueStateConfig = (OverdueStateConfig) o;
        return Objects.equals(this.name, overdueStateConfig.name) &&
        Objects.equals(this.isClearState, overdueStateConfig.isClearState) &&
        Objects.equals(this.condition, overdueStateConfig.condition) &&
        Objects.equals(this.externalMessage, overdueStateConfig.externalMessage) &&
        Objects.equals(this.isBlockChanges, overdueStateConfig.isBlockChanges) &&
        Objects.equals(this.isDisableEntitlement, overdueStateConfig.isDisableEntitlement) &&
        Objects.equals(this.subscriptionCancellationPolicy, overdueStateConfig.subscriptionCancellationPolicy) &&
        Objects.equals(this.autoReevaluationIntervalDays, overdueStateConfig.autoReevaluationIntervalDays);

    }

    @Override
    public int hashCode() {
        return Objects.hash(name,
                            isClearState,
                            condition,
                            externalMessage,
                            isBlockChanges,
                            isDisableEntitlement,
                            subscriptionCancellationPolicy,
                            autoReevaluationIntervalDays);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OverdueStateConfig {\n");
        
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    isClearState: ").append(toIndentedString(isClearState)).append("\n");
        sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
        sb.append("    externalMessage: ").append(toIndentedString(externalMessage)).append("\n");
        sb.append("    isBlockChanges: ").append(toIndentedString(isBlockChanges)).append("\n");
        sb.append("    isDisableEntitlement: ").append(toIndentedString(isDisableEntitlement)).append("\n");
        sb.append("    subscriptionCancellationPolicy: ").append(toIndentedString(subscriptionCancellationPolicy)).append("\n");
        sb.append("    autoReevaluationIntervalDays: ").append(toIndentedString(autoReevaluationIntervalDays)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

