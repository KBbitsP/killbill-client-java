/*
 * Copyright 2010-2014 Ning, Inc.
 * Copyright 2014-2020 Groupon, Inc
 * Copyright 2020-2021 Equinix, Inc
 * Copyright 2014-2021 The Billing Project, LLC
 *
 * The Billing Project licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class OverdueState {

    private String name = null;

    private String externalMessage = null;

    private Boolean isDisableEntitlementAndChangesBlocked = null;

    private Boolean isBlockChanges = null;

    private Boolean isClearState = null;

    private Integer reevaluationIntervalDays = null;


    public OverdueState() {
    }

    public OverdueState(final String name,
                     final String externalMessage,
                     final Boolean isDisableEntitlementAndChangesBlocked,
                     final Boolean isBlockChanges,
                     final Boolean isClearState,
                     final Integer reevaluationIntervalDays) {
        this.name = name;
        this.externalMessage = externalMessage;
        this.isDisableEntitlementAndChangesBlocked = isDisableEntitlementAndChangesBlocked;
        this.isBlockChanges = isBlockChanges;
        this.isClearState = isClearState;
        this.reevaluationIntervalDays = reevaluationIntervalDays;

    }


    public OverdueState setName(final String name) {
        this.name = name;
        return this;
    }

    public String getName() {
        return name;
    }

    public OverdueState setExternalMessage(final String externalMessage) {
        this.externalMessage = externalMessage;
        return this;
    }

    public String getExternalMessage() {
        return externalMessage;
    }

    public OverdueState setIsDisableEntitlementAndChangesBlocked(final Boolean isDisableEntitlementAndChangesBlocked) {
        this.isDisableEntitlementAndChangesBlocked = isDisableEntitlementAndChangesBlocked;
        return this;
    }

    @JsonProperty(value="isDisableEntitlementAndChangesBlocked")
    public Boolean isDisableEntitlementAndChangesBlocked() {
        return isDisableEntitlementAndChangesBlocked;
    }

    public OverdueState setIsBlockChanges(final Boolean isBlockChanges) {
        this.isBlockChanges = isBlockChanges;
        return this;
    }

    @JsonProperty(value="isBlockChanges")
    public Boolean isBlockChanges() {
        return isBlockChanges;
    }

    public OverdueState setIsClearState(final Boolean isClearState) {
        this.isClearState = isClearState;
        return this;
    }

    @JsonProperty(value="isClearState")
    public Boolean isClearState() {
        return isClearState;
    }

    public OverdueState setReevaluationIntervalDays(final Integer reevaluationIntervalDays) {
        this.reevaluationIntervalDays = reevaluationIntervalDays;
        return this;
    }

    public Integer getReevaluationIntervalDays() {
        return reevaluationIntervalDays;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OverdueState overdueState = (OverdueState) o;
        return Objects.equals(this.name, overdueState.name) &&
            Objects.equals(this.externalMessage, overdueState.externalMessage) &&
            Objects.equals(this.isDisableEntitlementAndChangesBlocked, overdueState.isDisableEntitlementAndChangesBlocked) &&
            Objects.equals(this.isBlockChanges, overdueState.isBlockChanges) &&
            Objects.equals(this.isClearState, overdueState.isClearState) &&
            Objects.equals(this.reevaluationIntervalDays, overdueState.reevaluationIntervalDays);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name,
            externalMessage,
            isDisableEntitlementAndChangesBlocked,
            isBlockChanges,
            isClearState,
            reevaluationIntervalDays);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OverdueState {\n");
        
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    externalMessage: ").append(toIndentedString(externalMessage)).append("\n");
        sb.append("    isDisableEntitlementAndChangesBlocked: ").append(toIndentedString(isDisableEntitlementAndChangesBlocked)).append("\n");
        sb.append("    isBlockChanges: ").append(toIndentedString(isBlockChanges)).append("\n");
        sb.append("    isClearState: ").append(toIndentedString(isClearState)).append("\n");
        sb.append("    reevaluationIntervalDays: ").append(toIndentedString(reevaluationIntervalDays)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

