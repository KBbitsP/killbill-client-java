/*
 * Copyright 2010-2014 Ning, Inc.
 * Copyright 2014-2020 Groupon, Inc
 * Copyright 2020-2021 Equinix, Inc
 * Copyright 2014-2021 The Billing Project, LLC
 *
 * The Billing Project licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import org.killbill.billing.client.model.gen.Account;
import org.killbill.billing.client.model.gen.AuditLog;
import org.killbill.billing.client.model.gen.PaymentMethod;
import org.killbill.billing.client.model.gen.PaymentTransaction;
import org.killbill.billing.client.model.gen.PluginProperty;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class ComboPaymentTransaction extends KillBillObject {

    private Account account = null;

    private PaymentMethod paymentMethod = null;

    private PaymentTransaction transaction = null;

    private List<PluginProperty> paymentMethodPluginProperties = null;

    private List<PluginProperty> transactionPluginProperties = null;



    public ComboPaymentTransaction() {
    }

    public ComboPaymentTransaction(final Account account,
                     final PaymentMethod paymentMethod,
                     final PaymentTransaction transaction,
                     final List<PluginProperty> paymentMethodPluginProperties,
                     final List<PluginProperty> transactionPluginProperties,
                     final List<AuditLog> auditLogs) {
        super(auditLogs);
        this.account = account;
        this.paymentMethod = paymentMethod;
        this.transaction = transaction;
        this.paymentMethodPluginProperties = paymentMethodPluginProperties;
        this.transactionPluginProperties = transactionPluginProperties;

    }


    public ComboPaymentTransaction setAccount(final Account account) {
        this.account = account;
        return this;
    }

    public Account getAccount() {
        return account;
    }

    public ComboPaymentTransaction setPaymentMethod(final PaymentMethod paymentMethod) {
        this.paymentMethod = paymentMethod;
        return this;
    }

    public PaymentMethod getPaymentMethod() {
        return paymentMethod;
    }

    public ComboPaymentTransaction setTransaction(final PaymentTransaction transaction) {
        this.transaction = transaction;
        return this;
    }

    public PaymentTransaction getTransaction() {
        return transaction;
    }

    public ComboPaymentTransaction setPaymentMethodPluginProperties(final List<PluginProperty> paymentMethodPluginProperties) {
        this.paymentMethodPluginProperties = paymentMethodPluginProperties;
        return this;
    }

    public ComboPaymentTransaction addPaymentMethodPluginPropertiesItem(final PluginProperty paymentMethodPluginPropertiesItem) {
        if (this.paymentMethodPluginProperties == null) {
            this.paymentMethodPluginProperties = new ArrayList<PluginProperty>();
        }
        this.paymentMethodPluginProperties.add(paymentMethodPluginPropertiesItem);
        return this;
    }

    public List<PluginProperty> getPaymentMethodPluginProperties() {
        return paymentMethodPluginProperties;
    }

    public ComboPaymentTransaction setTransactionPluginProperties(final List<PluginProperty> transactionPluginProperties) {
        this.transactionPluginProperties = transactionPluginProperties;
        return this;
    }

    public ComboPaymentTransaction addTransactionPluginPropertiesItem(final PluginProperty transactionPluginPropertiesItem) {
        if (this.transactionPluginProperties == null) {
            this.transactionPluginProperties = new ArrayList<PluginProperty>();
        }
        this.transactionPluginProperties.add(transactionPluginPropertiesItem);
        return this;
    }

    public List<PluginProperty> getTransactionPluginProperties() {
        return transactionPluginProperties;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ComboPaymentTransaction comboPaymentTransaction = (ComboPaymentTransaction) o;
        return Objects.equals(this.account, comboPaymentTransaction.account) &&
        Objects.equals(this.paymentMethod, comboPaymentTransaction.paymentMethod) &&
        Objects.equals(this.transaction, comboPaymentTransaction.transaction) &&
        Objects.equals(this.paymentMethodPluginProperties, comboPaymentTransaction.paymentMethodPluginProperties) &&
        Objects.equals(this.transactionPluginProperties, comboPaymentTransaction.transactionPluginProperties) &&
        Objects.equals(this.auditLogs, comboPaymentTransaction.auditLogs);

    }

    @Override
    public int hashCode() {
        return Objects.hash(account,
                            paymentMethod,
                            transaction,
                            paymentMethodPluginProperties,
                            transactionPluginProperties,
                            auditLogs, super.hashCode());
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ComboPaymentTransaction {\n");
        sb.append("    ").append(toIndentedString(super.toString())).append("\n");
        sb.append("    account: ").append(toIndentedString(account)).append("\n");
        sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
        sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
        sb.append("    paymentMethodPluginProperties: ").append(toIndentedString(paymentMethodPluginProperties)).append("\n");
        sb.append("    transactionPluginProperties: ").append(toIndentedString(transactionPluginProperties)).append("\n");
        sb.append("    auditLogs: ").append(toIndentedString(auditLogs)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

