/*
 * Copyright 2010-2014 Ning, Inc.
 * Copyright 2014-2020 Groupon, Inc
 * Copyright 2020-2021 Equinix, Inc
 * Copyright 2014-2021 The Billing Project, LLC
 *
 * The Billing Project licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.killbill.billing.catalog.api.Currency;
import org.killbill.billing.client.model.gen.AuditLog;
import org.killbill.billing.client.model.gen.PaymentAttempt;
import org.killbill.billing.client.model.gen.PaymentTransaction;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class InvoicePayment extends KillBillObject {

    private UUID targetInvoiceId = null;

    private UUID accountId = null;

    private UUID paymentId = null;

    private String paymentNumber = null;

    private String paymentExternalKey = null;

    private BigDecimal authAmount = null;

    private BigDecimal capturedAmount = null;

    private BigDecimal purchasedAmount = null;

    private BigDecimal refundedAmount = null;

    private BigDecimal creditedAmount = null;

    private Currency currency = null;

    private UUID paymentMethodId = null;

    private List<PaymentTransaction> transactions = null;

    private List<PaymentAttempt> paymentAttempts = null;



    public InvoicePayment() {
    }

    public InvoicePayment(final UUID targetInvoiceId,
                     final UUID accountId,
                     final UUID paymentId,
                     final String paymentNumber,
                     final String paymentExternalKey,
                     final BigDecimal authAmount,
                     final BigDecimal capturedAmount,
                     final BigDecimal purchasedAmount,
                     final BigDecimal refundedAmount,
                     final BigDecimal creditedAmount,
                     final Currency currency,
                     final UUID paymentMethodId,
                     final List<PaymentTransaction> transactions,
                     final List<PaymentAttempt> paymentAttempts,
                     final List<AuditLog> auditLogs) {
        super(auditLogs);
        this.targetInvoiceId = targetInvoiceId;
        this.accountId = accountId;
        this.paymentId = paymentId;
        this.paymentNumber = paymentNumber;
        this.paymentExternalKey = paymentExternalKey;
        this.authAmount = authAmount;
        this.capturedAmount = capturedAmount;
        this.purchasedAmount = purchasedAmount;
        this.refundedAmount = refundedAmount;
        this.creditedAmount = creditedAmount;
        this.currency = currency;
        this.paymentMethodId = paymentMethodId;
        this.transactions = transactions;
        this.paymentAttempts = paymentAttempts;

    }


    public InvoicePayment setTargetInvoiceId(final UUID targetInvoiceId) {
        this.targetInvoiceId = targetInvoiceId;
        return this;
    }

    public UUID getTargetInvoiceId() {
        return targetInvoiceId;
    }

    public InvoicePayment setAccountId(final UUID accountId) {
        this.accountId = accountId;
        return this;
    }

    public UUID getAccountId() {
        return accountId;
    }

    public InvoicePayment setPaymentId(final UUID paymentId) {
        this.paymentId = paymentId;
        return this;
    }

    public UUID getPaymentId() {
        return paymentId;
    }

    public InvoicePayment setPaymentNumber(final String paymentNumber) {
        this.paymentNumber = paymentNumber;
        return this;
    }

    public String getPaymentNumber() {
        return paymentNumber;
    }

    public InvoicePayment setPaymentExternalKey(final String paymentExternalKey) {
        this.paymentExternalKey = paymentExternalKey;
        return this;
    }

    public String getPaymentExternalKey() {
        return paymentExternalKey;
    }

    public InvoicePayment setAuthAmount(final BigDecimal authAmount) {
        this.authAmount = authAmount;
        return this;
    }

    public BigDecimal getAuthAmount() {
        return authAmount;
    }

    public InvoicePayment setCapturedAmount(final BigDecimal capturedAmount) {
        this.capturedAmount = capturedAmount;
        return this;
    }

    public BigDecimal getCapturedAmount() {
        return capturedAmount;
    }

    public InvoicePayment setPurchasedAmount(final BigDecimal purchasedAmount) {
        this.purchasedAmount = purchasedAmount;
        return this;
    }

    public BigDecimal getPurchasedAmount() {
        return purchasedAmount;
    }

    public InvoicePayment setRefundedAmount(final BigDecimal refundedAmount) {
        this.refundedAmount = refundedAmount;
        return this;
    }

    public BigDecimal getRefundedAmount() {
        return refundedAmount;
    }

    public InvoicePayment setCreditedAmount(final BigDecimal creditedAmount) {
        this.creditedAmount = creditedAmount;
        return this;
    }

    public BigDecimal getCreditedAmount() {
        return creditedAmount;
    }

    public InvoicePayment setCurrency(final Currency currency) {
        this.currency = currency;
        return this;
    }

    public Currency getCurrency() {
        return currency;
    }

    public InvoicePayment setPaymentMethodId(final UUID paymentMethodId) {
        this.paymentMethodId = paymentMethodId;
        return this;
    }

    public UUID getPaymentMethodId() {
        return paymentMethodId;
    }

    public InvoicePayment setTransactions(final List<PaymentTransaction> transactions) {
        this.transactions = transactions;
        return this;
    }

    public InvoicePayment addTransactionsItem(final PaymentTransaction transactionsItem) {
        if (this.transactions == null) {
            this.transactions = new ArrayList<PaymentTransaction>();
        }
        this.transactions.add(transactionsItem);
        return this;
    }

    public List<PaymentTransaction> getTransactions() {
        return transactions;
    }

    public InvoicePayment setPaymentAttempts(final List<PaymentAttempt> paymentAttempts) {
        this.paymentAttempts = paymentAttempts;
        return this;
    }

    public InvoicePayment addPaymentAttemptsItem(final PaymentAttempt paymentAttemptsItem) {
        if (this.paymentAttempts == null) {
            this.paymentAttempts = new ArrayList<PaymentAttempt>();
        }
        this.paymentAttempts.add(paymentAttemptsItem);
        return this;
    }

    public List<PaymentAttempt> getPaymentAttempts() {
        return paymentAttempts;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InvoicePayment invoicePayment = (InvoicePayment) o;
        return Objects.equals(this.targetInvoiceId, invoicePayment.targetInvoiceId) &&
        Objects.equals(this.accountId, invoicePayment.accountId) &&
        Objects.equals(this.paymentId, invoicePayment.paymentId) &&
        Objects.equals(this.paymentNumber, invoicePayment.paymentNumber) &&
        Objects.equals(this.paymentExternalKey, invoicePayment.paymentExternalKey) &&
        Objects.equals(this.authAmount, invoicePayment.authAmount) &&
        Objects.equals(this.capturedAmount, invoicePayment.capturedAmount) &&
        Objects.equals(this.purchasedAmount, invoicePayment.purchasedAmount) &&
        Objects.equals(this.refundedAmount, invoicePayment.refundedAmount) &&
        Objects.equals(this.creditedAmount, invoicePayment.creditedAmount) &&
        Objects.equals(this.currency, invoicePayment.currency) &&
        Objects.equals(this.paymentMethodId, invoicePayment.paymentMethodId) &&
        Objects.equals(this.transactions, invoicePayment.transactions) &&
        Objects.equals(this.paymentAttempts, invoicePayment.paymentAttempts) &&
        Objects.equals(this.auditLogs, invoicePayment.auditLogs);

    }

    @Override
    public int hashCode() {
        return Objects.hash(targetInvoiceId,
                            accountId,
                            paymentId,
                            paymentNumber,
                            paymentExternalKey,
                            authAmount,
                            capturedAmount,
                            purchasedAmount,
                            refundedAmount,
                            creditedAmount,
                            currency,
                            paymentMethodId,
                            transactions,
                            paymentAttempts,
                            auditLogs, super.hashCode());
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InvoicePayment {\n");
        sb.append("    ").append(toIndentedString(super.toString())).append("\n");
        sb.append("    targetInvoiceId: ").append(toIndentedString(targetInvoiceId)).append("\n");
        sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
        sb.append("    paymentId: ").append(toIndentedString(paymentId)).append("\n");
        sb.append("    paymentNumber: ").append(toIndentedString(paymentNumber)).append("\n");
        sb.append("    paymentExternalKey: ").append(toIndentedString(paymentExternalKey)).append("\n");
        sb.append("    authAmount: ").append(toIndentedString(authAmount)).append("\n");
        sb.append("    capturedAmount: ").append(toIndentedString(capturedAmount)).append("\n");
        sb.append("    purchasedAmount: ").append(toIndentedString(purchasedAmount)).append("\n");
        sb.append("    refundedAmount: ").append(toIndentedString(refundedAmount)).append("\n");
        sb.append("    creditedAmount: ").append(toIndentedString(creditedAmount)).append("\n");
        sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
        sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
        sb.append("    paymentAttempts: ").append(toIndentedString(paymentAttempts)).append("\n");
        sb.append("    auditLogs: ").append(toIndentedString(auditLogs)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

