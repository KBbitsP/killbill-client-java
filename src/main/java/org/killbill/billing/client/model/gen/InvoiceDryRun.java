/*
 * Copyright 2010-2014 Ning, Inc.
 * Copyright 2014-2020 Groupon, Inc
 * Copyright 2020-2021 Equinix, Inc
 * Copyright 2014-2021 The Billing Project, LLC
 *
 * The Billing Project licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.joda.time.LocalDate;
import org.killbill.billing.catalog.api.BillingActionPolicy;
import org.killbill.billing.catalog.api.BillingPeriod;
import org.killbill.billing.catalog.api.PhaseType;
import org.killbill.billing.catalog.api.ProductCategory;
import org.killbill.billing.client.model.gen.PhasePrice;
import org.killbill.billing.entitlement.api.SubscriptionEventType;
import org.killbill.billing.invoice.api.DryRunType;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class InvoiceDryRun {

    private DryRunType dryRunType = null;

    private SubscriptionEventType dryRunAction = null;

    private PhaseType phaseType = null;

    private String productName = null;

    private ProductCategory productCategory = null;

    private BillingPeriod billingPeriod = null;

    private String priceListName = null;

    private UUID subscriptionId = null;

    private UUID bundleId = null;

    private LocalDate effectiveDate = null;

    private BillingActionPolicy billingPolicy = null;

    private List<PhasePrice> priceOverrides = null;


    public InvoiceDryRun() {
    }

    public InvoiceDryRun(final DryRunType dryRunType,
                     final SubscriptionEventType dryRunAction,
                     final PhaseType phaseType,
                     final String productName,
                     final ProductCategory productCategory,
                     final BillingPeriod billingPeriod,
                     final String priceListName,
                     final UUID subscriptionId,
                     final UUID bundleId,
                     final LocalDate effectiveDate,
                     final BillingActionPolicy billingPolicy,
                     final List<PhasePrice> priceOverrides) {
        this.dryRunType = dryRunType;
        this.dryRunAction = dryRunAction;
        this.phaseType = phaseType;
        this.productName = productName;
        this.productCategory = productCategory;
        this.billingPeriod = billingPeriod;
        this.priceListName = priceListName;
        this.subscriptionId = subscriptionId;
        this.bundleId = bundleId;
        this.effectiveDate = effectiveDate;
        this.billingPolicy = billingPolicy;
        this.priceOverrides = priceOverrides;

    }


    public InvoiceDryRun setDryRunType(final DryRunType dryRunType) {
        this.dryRunType = dryRunType;
        return this;
    }

    public DryRunType getDryRunType() {
        return dryRunType;
    }

    public InvoiceDryRun setDryRunAction(final SubscriptionEventType dryRunAction) {
        this.dryRunAction = dryRunAction;
        return this;
    }

    public SubscriptionEventType getDryRunAction() {
        return dryRunAction;
    }

    public InvoiceDryRun setPhaseType(final PhaseType phaseType) {
        this.phaseType = phaseType;
        return this;
    }

    public PhaseType getPhaseType() {
        return phaseType;
    }

    public InvoiceDryRun setProductName(final String productName) {
        this.productName = productName;
        return this;
    }

    public String getProductName() {
        return productName;
    }

    public InvoiceDryRun setProductCategory(final ProductCategory productCategory) {
        this.productCategory = productCategory;
        return this;
    }

    public ProductCategory getProductCategory() {
        return productCategory;
    }

    public InvoiceDryRun setBillingPeriod(final BillingPeriod billingPeriod) {
        this.billingPeriod = billingPeriod;
        return this;
    }

    public BillingPeriod getBillingPeriod() {
        return billingPeriod;
    }

    public InvoiceDryRun setPriceListName(final String priceListName) {
        this.priceListName = priceListName;
        return this;
    }

    public String getPriceListName() {
        return priceListName;
    }

    public InvoiceDryRun setSubscriptionId(final UUID subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }

    public UUID getSubscriptionId() {
        return subscriptionId;
    }

    public InvoiceDryRun setBundleId(final UUID bundleId) {
        this.bundleId = bundleId;
        return this;
    }

    public UUID getBundleId() {
        return bundleId;
    }

    public InvoiceDryRun setEffectiveDate(final LocalDate effectiveDate) {
        this.effectiveDate = effectiveDate;
        return this;
    }

    public LocalDate getEffectiveDate() {
        return effectiveDate;
    }

    public InvoiceDryRun setBillingPolicy(final BillingActionPolicy billingPolicy) {
        this.billingPolicy = billingPolicy;
        return this;
    }

    public BillingActionPolicy getBillingPolicy() {
        return billingPolicy;
    }

    public InvoiceDryRun setPriceOverrides(final List<PhasePrice> priceOverrides) {
        this.priceOverrides = priceOverrides;
        return this;
    }

    public InvoiceDryRun addPriceOverridesItem(final PhasePrice priceOverridesItem) {
        if (this.priceOverrides == null) {
            this.priceOverrides = new ArrayList<PhasePrice>();
        }
        this.priceOverrides.add(priceOverridesItem);
        return this;
    }

    public List<PhasePrice> getPriceOverrides() {
        return priceOverrides;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InvoiceDryRun invoiceDryRun = (InvoiceDryRun) o;
        return Objects.equals(this.dryRunType, invoiceDryRun.dryRunType) &&
            Objects.equals(this.dryRunAction, invoiceDryRun.dryRunAction) &&
            Objects.equals(this.phaseType, invoiceDryRun.phaseType) &&
            Objects.equals(this.productName, invoiceDryRun.productName) &&
            Objects.equals(this.productCategory, invoiceDryRun.productCategory) &&
            Objects.equals(this.billingPeriod, invoiceDryRun.billingPeriod) &&
            Objects.equals(this.priceListName, invoiceDryRun.priceListName) &&
            Objects.equals(this.subscriptionId, invoiceDryRun.subscriptionId) &&
            Objects.equals(this.bundleId, invoiceDryRun.bundleId) &&
            Objects.equals(this.effectiveDate, invoiceDryRun.effectiveDate) &&
            Objects.equals(this.billingPolicy, invoiceDryRun.billingPolicy) &&
            Objects.equals(this.priceOverrides, invoiceDryRun.priceOverrides);
    }

    @Override
    public int hashCode() {
        return Objects.hash(dryRunType,
            dryRunAction,
            phaseType,
            productName,
            productCategory,
            billingPeriod,
            priceListName,
            subscriptionId,
            bundleId,
            effectiveDate,
            billingPolicy,
            priceOverrides);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InvoiceDryRun {\n");
        
        sb.append("    dryRunType: ").append(toIndentedString(dryRunType)).append("\n");
        sb.append("    dryRunAction: ").append(toIndentedString(dryRunAction)).append("\n");
        sb.append("    phaseType: ").append(toIndentedString(phaseType)).append("\n");
        sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
        sb.append("    productCategory: ").append(toIndentedString(productCategory)).append("\n");
        sb.append("    billingPeriod: ").append(toIndentedString(billingPeriod)).append("\n");
        sb.append("    priceListName: ").append(toIndentedString(priceListName)).append("\n");
        sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
        sb.append("    bundleId: ").append(toIndentedString(bundleId)).append("\n");
        sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
        sb.append("    billingPolicy: ").append(toIndentedString(billingPolicy)).append("\n");
        sb.append("    priceOverrides: ").append(toIndentedString(priceOverrides)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

