/*
 * Copyright 2010-2014 Ning, Inc.
 * Copyright 2014-2020 Groupon, Inc
 * Copyright 2020-2021 Equinix, Inc
 * Copyright 2014-2021 The Billing Project, LLC
 *
 * The Billing Project licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */


package org.killbill.billing.client.api.gen;

import java.util.Objects;

import org.killbill.billing.client.model.gen.AuditLog;
import org.killbill.billing.client.model.gen.CustomField;
import java.util.UUID;
import org.killbill.billing.client.model.AuditLogs;
import java.util.List;
import org.killbill.billing.client.model.CustomFields;
import org.killbill.billing.util.api.AuditLevel;

import org.killbill.billing.client.Converter;
import org.killbill.billing.client.KillBillClientException;
import org.killbill.billing.client.KillBillHttpClient;
import org.killbill.billing.client.RequestOptions;
import org.killbill.billing.client.RequestOptions.RequestOptionsBuilder;

import org.killbill.billing.client.util.Preconditions;
import org.killbill.billing.client.util.Multimap;
import org.killbill.billing.client.util.TreeMapSetMultimap;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
public class CustomFieldApi {

    private final KillBillHttpClient httpClient;

    public CustomFieldApi() {
        this(new KillBillHttpClient());
    }

    public CustomFieldApi(final KillBillHttpClient httpClient) {
        this.httpClient = httpClient;
    }

    public AuditLogs getCustomFieldAuditLogsWithHistory(final UUID customFieldId, final RequestOptions inputOptions) throws KillBillClientException {
        Preconditions.checkNotNull(customFieldId, "Missing the required parameter 'customFieldId' when calling getCustomFieldAuditLogsWithHistory");

        final String uri = "/1.0/kb/customFields/{customFieldId}/auditLogsWithHistory"
          .replaceAll("\\{" + "customFieldId" + "\\}", customFieldId.toString());


        final RequestOptionsBuilder inputOptionsBuilder = inputOptions.extend();
        inputOptionsBuilder.withHeader(KillBillHttpClient.HTTP_HEADER_ACCEPT, "application/json");
        final RequestOptions requestOptions = inputOptionsBuilder.build();

        return httpClient.doGet(uri, AuditLogs.class, requestOptions);
    }

    public CustomFields getCustomFields(final RequestOptions inputOptions) throws KillBillClientException {
        return getCustomFields(Long.valueOf(0), Long.valueOf(100), AuditLevel.NONE, inputOptions);
    }

    public CustomFields getCustomFields(final Long offset, final Long limit, final AuditLevel audit, final RequestOptions inputOptions) throws KillBillClientException {

        final String uri = "/1.0/kb/customFields/pagination";

        final Multimap<String, String> queryParams = new TreeMapSetMultimap<>(inputOptions.getQueryParams());
        if (offset != null) {
            queryParams.put("offset", String.valueOf(offset));
        }
        if (limit != null) {
            queryParams.put("limit", String.valueOf(limit));
        }
        if (audit != null) {
            queryParams.put("audit", String.valueOf(audit));
        }

        final RequestOptionsBuilder inputOptionsBuilder = inputOptions.extend();
        inputOptionsBuilder.withQueryParams(queryParams.asMap());
        inputOptionsBuilder.withHeader(KillBillHttpClient.HTTP_HEADER_ACCEPT, "application/json");
        final RequestOptions requestOptions = inputOptionsBuilder.build();

        return httpClient.doGet(uri, CustomFields.class, requestOptions);
    }

    public CustomFields searchCustomFields(final String searchKey, final RequestOptions inputOptions) throws KillBillClientException {
        return searchCustomFields(searchKey, Long.valueOf(0), Long.valueOf(100), AuditLevel.NONE, inputOptions);
    }

    public CustomFields searchCustomFields(final String searchKey, final Long offset, final Long limit, final AuditLevel audit, final RequestOptions inputOptions) throws KillBillClientException {
        Preconditions.checkNotNull(searchKey, "Missing the required parameter 'searchKey' when calling searchCustomFields");

        final String uri = "/1.0/kb/customFields/search/{searchKey}"
          .replaceAll("\\{" + "searchKey" + "\\}", searchKey.toString());

        final Multimap<String, String> queryParams = new TreeMapSetMultimap<>(inputOptions.getQueryParams());
        if (offset != null) {
            queryParams.put("offset", String.valueOf(offset));
        }
        if (limit != null) {
            queryParams.put("limit", String.valueOf(limit));
        }
        if (audit != null) {
            queryParams.put("audit", String.valueOf(audit));
        }

        final RequestOptionsBuilder inputOptionsBuilder = inputOptions.extend();
        inputOptionsBuilder.withQueryParams(queryParams.asMap());
        inputOptionsBuilder.withHeader(KillBillHttpClient.HTTP_HEADER_ACCEPT, "application/json");
        final RequestOptions requestOptions = inputOptionsBuilder.build();

        return httpClient.doGet(uri, CustomFields.class, requestOptions);
    }

    public CustomFields searchCustomFieldsByTypeName(final String objectType, final String fieldName, final String fieldValue, final RequestOptions inputOptions) throws KillBillClientException {
        return searchCustomFieldsByTypeName(objectType, fieldName, fieldValue, Long.valueOf(0), Long.valueOf(100), AuditLevel.NONE, inputOptions);
    }

    public CustomFields searchCustomFieldsByTypeName(final String objectType, final String fieldName, final String fieldValue, final Long offset, final Long limit, final AuditLevel audit, final RequestOptions inputOptions) throws KillBillClientException {

        final String uri = "/1.0/kb/customFields/search";

        final Multimap<String, String> queryParams = new TreeMapSetMultimap<>(inputOptions.getQueryParams());
        if (objectType != null) {
            queryParams.put("objectType", String.valueOf(objectType));
        }
        if (fieldName != null) {
            queryParams.put("fieldName", String.valueOf(fieldName));
        }
        if (fieldValue != null) {
            queryParams.put("fieldValue", String.valueOf(fieldValue));
        }
        if (offset != null) {
            queryParams.put("offset", String.valueOf(offset));
        }
        if (limit != null) {
            queryParams.put("limit", String.valueOf(limit));
        }
        if (audit != null) {
            queryParams.put("audit", String.valueOf(audit));
        }

        final RequestOptionsBuilder inputOptionsBuilder = inputOptions.extend();
        inputOptionsBuilder.withQueryParams(queryParams.asMap());
        inputOptionsBuilder.withHeader(KillBillHttpClient.HTTP_HEADER_ACCEPT, "application/json");
        final RequestOptions requestOptions = inputOptionsBuilder.build();

        return httpClient.doGet(uri, CustomFields.class, requestOptions);
    }

}
